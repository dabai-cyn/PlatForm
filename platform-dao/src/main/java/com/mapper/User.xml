<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.domain.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="loginName" property="district" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"  />
    </resultMap>

    <sql id="Base_Column_List">
        id, userName, loginName, sex, status, createTime, updateTime
    </sql>
    <sql id="Base_Where_List">
        <if test="user.userName != null  and user.userName != ''">
            and userName like concat('%',#{user.userName},'%')
        </if>
    </sql>
    <sql id="Base_Where_List2">
        <if test="userName != null and userName != ''">
            and userName like concat('%',#{userName},'%')
        </if>
    </sql>

    <insert id="add" parameterType="com.domain.User" useGeneratedKeys="true">
        insert into user (userName, loginName, sex, status, createTime, updateTime) values(#{userName}, #{loginName}, #{sex}, #{status}, #{sex}, #{createTime}, #{updateTime})
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        delete from user where id =#{id}
    </delete>

    <update id="update" parameterType="com.domain.User">
        update user set
        <if test="userName != null">userName = #{userName},</if>
        <if test="loginName != null">loginName = #{loginName},</if>
        <if test="sex != null">sex = #{sex},</if>
        <if test="status != null">loginName = #{status},</if>
        updateTime = #{updateTime}
        where id = #{id}
    </update>

    <select id="get" parameterType="java.lang.Long" resultMap="UserMap">
        select <include refid="Base_Column_List" /> from user where id = #{id}
    </select>

    <select id="getList" resultMap="UserMap" parameterType="com.forenms.obtain.utils.PageParm">
        select <include refid="Base_Column_List" />
        from user where 1=1 <include refid="Base_Where_List" />
        order by id desc
        limit #{pageNum}, #{pageSize}
    </select>

</mapper>
